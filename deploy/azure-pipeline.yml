
steps:
  - task: DeleteFiles@1
    displayName: 'removing dist files'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/dist/'
      Contents: '**/*'
      RemoveDotFiles: true

  - task: NodeTool@0
    displayName: 'using Node 22'
    inputs:
      versionSource: 'spec'
      versionSpec: '22'
      checkLatest: true

  - task: Npm@1
    displayName: 'npm install'
    inputs:
      command: 'install'
      workingDir: '$(Build.SourcesDirectory)'

  - task: Npm@1
    displayName: 'npm build'
    inputs:
      command: 'custom'
      workingDir: '$(Build.SourcesDirectory)'
      customCommand: 'run build'

  - task: Npm@1
    displayName: 'npm versioning'
    inputs:
      command: 'custom'
      workingDir: '$(Build.SourcesDirectory)'
      customCommand: 'version patch --no-git-tag-version'

  - bash: |
      VERSION=$(node -e "let a=require('./package.json').version;console.log(a)")
      SCRIPT_FILE="deploy.js"
      touch $SCRIPT_FILE
      echo "var fs=require('fs')"                         > $SCRIPT_FILE
      echo "const vssExt=require('./vss-extension.json')" >> $SCRIPT_FILE
      echo "vssExt.version='$VERSION'"                    >> $SCRIPT_FILE
      echo "const vssExtStr=JSON.stringify(vssExt)"       >> $SCRIPT_FILE
      echo "fs.writeFile('vss-extension.json',vssExtStr,'utf-8',()=>{})" >> $SCRIPT_FILE
      node $SCRIPT_FILE
      rm $SCRIPT_FILE
    displayName: 'extension versioning'

  - task: DeleteFiles@1
    displayName: 'removing extension file'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: 'JonasBBernardi.az-devops-pipeline-dashboard-*.vsix'
      RemoveDotFiles: true

  - bash: |
      npx tfx-cli extension create
    displayName: 'create extension'